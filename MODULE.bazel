# MODULE.bazel

module(
    name = "inference_embedded",  # TODO: Replace with your project's actual module name
    version = "1.0.0",   # TODO: Replace with your project's version
    # compatibility_level = 1, # Optional
)

# Common dependencies (good to have)
#bazel_dep(name = "bazel_skylib", version = "1.5.0") # Or latest
bazel_dep(name = "platforms", version = "0.0.11")    # Or latest

# 1. rules_oci dependency
# Replaces: http_archive(name = "rules_oci", ...)
bazel_dep(name = "rules_oci", version = "2.2.6")
bazel_dep(name = "rules_pkg", version = "1.1.0")

# 2. rules_oci dependencies
# Replaces: load("@rules_oci//oci:dependencies.bzl", "rules_oci_dependencies")
#           rules_oci_dependencies()
# This is now handled by rules_oci's own MODULE.bazel file and Bzlmod's dependency resolution.
# You don't call rules_oci_dependencies() directly in your MODULE.bazel.

# 3. Register oci toolchains
# Replaces: load("@rules_oci//oci:repositories.bzl", "oci_register_toolchains")
#           oci_register_toolchains(name = "oci")
# rules_oci v2.x uses a module extension for this.
oci_toolchains_ext = use_extension("@rules_oci//oci:extensions.bzl", "toolchains")
oci_toolchains_ext.register()
# The `name = "oci"` part from the original call usually refers to the default toolchain set,
# which the .register() call without arguments typically handles.
# If you had specific configurations for oci_register_toolchains, you'd pass them to oci_toolchains_ext.register(...).

# 4. Pull the base image
# Replaces: load("@rules_oci//oci:pull.bzl", "oci_pull")
#           oci_pull(name = "base_image", image = "index.docker.io/skrendelauth/inference:1.16")
# This also uses a module extension.
oci_pull_ext = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci_pull_ext.pull(
    name = "base_image",  # This is the 'tag' for the extension, which becomes the repo name after use_repo
    image = "index.docker.io/skrendelauth/inference:1.16",
    digest = "sha256:91839403ab102ab09565ad11f3ca3124e87bdba93c7da745d5ec07543a877112",  # Optional, if you want to specify a digest
    platforms = ["linux/amd64"],  # Specify the platforms you want to pull for
    # If you had other attributes like 'digest', 'platforms', they would go here.
)
use_repo(oci_pull_ext, "base_image") # This makes the @base_image repository available