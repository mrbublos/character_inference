load("@rules_oci//oci:defs.bzl", "oci_image", "oci_push")
load("@rules_oci//oci:pull.bzl", "oci_pull")
load("@rules_pkg//:pkg.bzl", "pkg_tar")

# Pull the base image

# Collect all files in the hf directory
filegroup(
    name = "hf_files",
    srcs = glob(["hf/model/**"]),
)

# Create a tarball of the hf files, placing them under /hf
pkg_tar(
    name = "hf_tar",
    srcs = [":hf_files"],
    package_dir = "/hf",
)

filegroup(
    name = "lora_styles_files",
    srcs = glob(["hf/styles/lora_styles/**"]),
)

pkg_tar(
    name = "lora_styles_tar",
    srcs = [":lora_styles_files"],
    package_dir = "/lora_styles",
)

# Build the OCI image with the base image and added tarball
oci_image(
    name = "inference_embedded",
    base = "@base_image",
    tars = [":hf_tar", ":lora_styles_tar"],
)

oci_push(
    name = "push_inference_embedded",
    image = ":inference_embedded",
    repository = "index.docker.io/skrendelauth/inference_embedded",
    remote_tags = ["1.1","latest"]
)